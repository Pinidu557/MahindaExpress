import React, { useState } from 'react';

export default function Reports() {
  const [error, setError] = useState('');

  const generatePDF = async (month) => {
    try {
      const url = `http://localhost:4000/reports/payroll?month=${month}`;
      const response = await fetch(url, { method: 'GET', credentials: 'include' });
      if (!response.ok) throw new Error('Failed to generate payroll report');
      const blob = await response.blob();
      const downloadUrl = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = downloadUrl;
      a.download = `payroll_report_${month}.pdf`;
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(downloadUrl);
      document.body.removeChild(a);
    } catch (err) {
      setError('Failed to generate payroll report');
    }
  };

  const generateLastMonth = () => {
    const date = new Date();
    date.setMonth(date.getMonth() - 1);
    const month = date.toISOString().slice(0, 7); // Format: YYYY-MM
    generatePDF(month);
  };

  return (
    <div className="p-6 max-w-4xl mx-auto">
      <h1 className="text-3xl font-bold mb-8">Payroll Reports</h1>

      {error && (
        <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6">
          {error}
        </div>
      )}

      <div className="space-y-8">
        <div>
          <h2 className="text-xl font-semibold mb-4">Generate Last Month's Report</h2>
          <button
            onClick={generateLastMonth}
            className="bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded inline-flex items-center"
          >
            <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
            Generate PDF
          </button>
        </div>

        <div>
          <h2 className="text-xl font-semibold mb-4">Generate Report for Specific Month</h2>
          <input
            type="month"
            onChange={(e) => generatePDF(e.target.value)}
            className="border rounded px-3 py-2"
          />
        </div>

        <div className="text-sm text-gray-600">
          <p>* Reports will be generated as PDF files</p>
          <p>* Only processed payrolls can be downloaded</p>
        </div>
      </div>
    </div>
  );
}
